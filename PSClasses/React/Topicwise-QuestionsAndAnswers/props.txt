props
 - props are read-only objects used to pass data from a parent component to a child component.
 - Props are immutable, meaning child components cannot modify them.
 - Props are inputs to React components. 
 - They are single values or objects passed to components via HTML attributes, used to make components dynamic and reusable. 
======================================================================================
Can we modify props inside a component?
 - No. Props are read-only. 
 - Trying to modify them will result in a warning. 
 - If we need to change a value, lift the state up to the parent and update it there.
=====================================================================================
What are default props?
 - Default props provide default values if no value is passed.
function Welcome({ name = "Guest" }) {
  return <h1>Hello, {name}</h1>;
}
Welcome.defaultProps = {
  name: "Guest"
};
====================================================================================
What are prop-types and why are they used?
 - PropTypes is a type-checking library used to define expected prop types.
 - Helps catch bugs and improves code readability.
import PropTypes from 'prop-types';
function Greet({ name }) {
  return <h1>Hello, {name}</h1>;
}
Greet.propTypes = {
  name: PropTypes.string.isRequired
};
===================================================================================
Can props be objects or arrays?
 - Yes. You can pass objects, arrays, functions, or any type.
==================================================================================
What is destructuring of props?
 -It’s a shorthand to extract props directly in the function parameters.
function Welcome({ name, age }) {
  return <h1>{name} is {age} years old</h1>;
}
==================================================================================
How do props help in component reusability?
 -By passing different values through props, the same component can render different outputs.
<Alert message="Error occurred" type="error" />
<Alert message="Success!" type="success" />
==================================================================================
What happens if a required prop is missing?
 - React won’t break.
 - but if you’re using PropTypes, a warning will be logged in the console during development.
==================================================================================
==================================================================================
==================================================================================
==================================================================================
==================================================================================
==================================================================================
==================================================================================
==================================================================================
==================================================================================
==================================================================================
==================================================================================
==================================================================================
==================================================================================
==================================================================================
==================================================================================
==================================================================================
==================================================================================
==================================================================================
==================================================================================