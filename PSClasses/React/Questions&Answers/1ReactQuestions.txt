Machine Coding -
	1. Create a Timer which has start, pause and Reset. - Done
	2. Create a clock using life cycle methods. Hint - tick method - Done
	3. Create a Todo - WIP
	4. Build Folder Structure
	5. You're given two API endpoints: - Done
		- GET /user → Returns the current user. -> { "id": 1, "name": "Alice" }
		- GET /posts?userId=1 → Returns posts for a specific user. -> [
			{ "id": 101, "title": "Post A" },
			{ "id": 102, "title": "Post B" }
		]
	6. Product Listing App
	7. accordion
	8. Table
	9. tick tac toe 


Questions -
	- What is state Lifting? Explain with Examples in Details. - done
	- Explain Life cycle components in React ? - done 
	- What is Virtual DOM ? How it works ? How reconciliation works ? - done
	- Lazy Loading in React ? - done
	- Why is const used in const [value, setValue] = useState('0') and not let or var? - done
	- props drilling - done
	- What is <StrictMode>? Why it is used ? - Done
	- How Many Virtual DOMs Can Be There in React at a Time? - Done
	- What is cleanup function ? how to do unmounting ? - done
	- What are react hooks ? why it is used ? - WIP

	Synthetic Events in React - Understand in Next Class
	What is Micro Front end Architecture ?
	Security Practices in React ?
    useMemo - Why it is used 
    useCallback - Why it is used ?
    When we can use Context?
    How to optimize images in React ?
    Why are middleware used in Redux ?
    Why do we use TypeScript ?
    build - _build -> bundle - react make 2 budle - one for without lazy component - one for lazy component - Machine coding

Uncontrolled component
controlled component
Syntehtic events
Real Events
Controlled form - working example
Uncontrolled form - working example
useRef, how does useRef does not trigger rerender
native events
==========
Context - 
When context get failed
How to debug in useContext
=========================
File Manager
===========
Ui responsive
 



